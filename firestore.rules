rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection:
    // - Allow users to read their own profile.
    // - Allow users to update their own profile (displayName, photoURL).
    // - Admins can read any user profile.
    // - Only admins can change roles (via a trusted backend/cloud function typically).
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow update: if request.auth != null && request.auth.uid == userId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName', 'photoURL', 'updatedAt']);
      allow create: if request.auth != null; // Allow user to create their own profile document on first sign-in if managed by client
      // For role changes, it's safer to handle this via a Cloud Function triggered by an admin action.
      // allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // More general admin update
    }

    // Documents (organizations, spaces, pages):
    // - Allow any authenticated user to read.
    // - Allow users with 'editor' or 'admin' roles to create, update, delete.
    match /documents/{documentId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && (
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'editor'
                     );
    }

    // Invitations:
    // - Only admins or editors can create invitations.
    // - Authenticated users can read invitations.
    // - Only admins can delete/update invitations.
    match /invitations/{invitationId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'editor'
                    );
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
